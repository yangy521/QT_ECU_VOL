/*******************************************************************************
* Filename: Queue.h	                                             	 		   *
* Description:											   			 		   												*
* Author:                                                           		   *
* Date:     														 		   														*
* Revision:															 		 														  *
*******************************************************************************/

#include "KSDsys.h"

#define QUEUE_DATA_TYPE		tMessage
#define NULL				0

#define NOT_OK              0xff                        /* 参数错误                                     */

#define QUEUE_FULL          8                           /* 队列满                                       */
#define QUEUE_EMPTY         4                           /* 无数据                                       */
#define QUEUE_OK            1                           /* 操作成功                                     */

#define Q_WRITE_MODE        1                           /* 操作成功                                     */
#define Q_WRITE_FRONT_MODE  2                           /* 操作成功                                     */

#define LEN_DATAQUEUE    32

typedef struct _tMessage 
{
    unsigned char	ucMsgType;	//类型
    unsigned char	ucMsgMacID;	//ID
    unsigned char	ucMsgEvent;	//事件
} tMessage;

typedef struct {
    QUEUE_DATA_TYPE     *Out;                   /* 指向数据输出位置         */
    QUEUE_DATA_TYPE     *In;                    /* 指向数据输入位置         */
    QUEUE_DATA_TYPE     *End;                   /* 指向Buf的结束位置        */
    unsigned short      NData;                  /* 队列中数据个数           */
    unsigned short      MaxData;                /* 队列中允许存储的数据个数 */   
	QUEUE_DATA_TYPE     Buffer[LEN_DATAQUEUE];              /* 存储数据的空间           */
} DataQueue;
       
/*********************************************************************************************************
** 函数名称: QueueCreate
** 功能描述: 初始化数据队列
** 输　入: Buf      ：为队列分配的存储空间地址
**         SizeOfBuf：为队列深度，元素个数
** 输　出: NOT_OK  :参数错误  QUEUE_OK:成功
********************************************************************************************************/
extern unsigned char QueueCreate(void *Buf, unsigned long SizeOfBuf);

/*********************************************************************************************************
** 函数名称: QueueRead
** 功能描述: 获取队列中的数据
** 输　入: Ret:存储返回的消息的地址;   Buf:指向队列的指针
** 输　出: NOT_OK     ：参数错误;   QUEUE_OK   ：收到消息;   QUEUE_EMPTY：队列空
********************************************************************************************************/
extern unsigned char QueueRead(QUEUE_DATA_TYPE *Ret, void *Buf);

/*********************************************************************************************************
** 函数名称: QueueWrite
** 功能描述: FIFO方式发送数据
** 输　入: Buf :指向队列的指针;     Data:发送的数据
** 输　出: NOT_OK   ：参数错误;     QUEUE_FULL:队列满;         QUEUE_OK  :发送成功
********************************************************************************************************/
extern unsigned char QueueWrite(void *Buf, QUEUE_DATA_TYPE Data);

/*********************************************************************************************************
** 函数名称: QueueWrite
** 功能描述: LIFO方式发送数据
** 输　入: Buf:指向队列的指针;         Data:消息数据
** 输　出: QUEUE_FULL:队列满;         QUEUE_OK:发送成功
********************************************************************************************************/
extern unsigned char QueueWriteFront(void *Buf, QUEUE_DATA_TYPE Data);

/*********************************************************************************************************
** 函数名称: QueueNData
** 功能描述: 取得队列中数据数
** 输　入: Buf:指向队列的指针
** 输　出: 消息数
********************************************************************************************************/
extern unsigned short QueueNData(void *Buf);

/*********************************************************************************************************
** 函数名称: QueueSize
** 功能描述: 取得队列总容量
** 输　入: Buf:指向队列的指针
** 输　出: 队列总容量
********************************************************************************************************/
extern unsigned short QueueSize(void *Buf);

/*********************************************************************************************************
** 函数名称: OSQFlush
** 功能描述: 清空队列
** 输　入: Buf:指向队列的指针
** 输　出: 无
********************************************************************************************************/
extern void QueueFlush(void *Buf);

/*********************************************************************************************************
** 函数名称: GetDataByte
** 功能描述: 将长整形数据拆分成单字节
** 输　入: ulData:长整形数据；ucNumber:字节位数
** 输　出: 单字节
********************************************************************************************************/
extern unsigned char GetDataByte(unsigned long ulData,unsigned char ucNumber);

